using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Xml.Serialization;

namespace zajecia3a
{
    public partial class Form1 : Form
    {
        public Dane dane = new Dane();
        private int width = 0;
        private int height = 0;

        //private int[,] maska = new int[3, 3];

        public Form1()
        {
            InitializeComponent();
        }

        private void buttonOdczyt_Click(object sender, EventArgs e)
        {
            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                pictureBox1.Load(openFileDialog1.FileName);

                width = pictureBox1.Image.Width;
                height = pictureBox1.Image.Height;

                pictureBox2.Image = new Bitmap(width, height);

                button1.Enabled = true;
                button2.Enabled = true;
                button3.Enabled = true;
                button4.Enabled = true;
                button5.Enabled = true;
                button6.Enabled = true;
                //button7 to exit
                button8.Enabled = true;
                button9.Enabled = true;
                button10.Enabled = true;
                button11.Enabled = true;
                button12.Enabled = true;
                button13.Enabled = true;
                button14.Enabled = true;
                button15.Enabled = true;
                button16.Enabled = true;
                button17.Enabled = true;
                button18.Enabled = true;

                text1.Enabled = true;
                text1.Text = "0";
                text2.Enabled = true;
                text2.Text = "0";
                text3.Enabled = true;
                text3.Text = "0";
                text4.Enabled = true;
                text4.Text = "0";
                text5.Enabled = true;
                text5.Text = "1";
                text6.Enabled = true;
                text6.Text = "0";
                text7.Enabled = true;
                text7.Text = "0";
                text8.Enabled = true;
                text8.Text = "0";
                text9.Enabled = true;
                text9.Text = "0";

                //inicjalizujMaske();
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image; //Alias bitmapy
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;

                    k = Color.FromArgb(b, g, r);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;

                    k = Color.FromArgb(r, b, g);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void button3_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = k.R;
                    g = k.G;
                    b = k.B;

                    k = Color.FromArgb(g, r, b);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void button4_Click(object sender, EventArgs e)
        {
            pictureBox1.Image = pictureBox2.Image;
        }

        private void button5_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);
                    r = 255 - k.R;
                    g = 255 - k.G;
                    b = 255 - k.B;

                    k = Color.FromArgb(r, g, b);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void trackBar1_ValueChanged(object sender, EventArgs e)
        {
            dane.poziomJasnCiem = trackBar1.Value;
        }

        private void button6_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            int r, g, b;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);

                    if (dane.poziomJasnCiem + k.R > 255) r = 255;
                    else if (dane.poziomJasnCiem + k.R < 0) r = 0;
                    else r = dane.poziomJasnCiem + k.R;

                    if (dane.poziomJasnCiem + k.G > 255) g = 255;
                    else if (dane.poziomJasnCiem + k.G < 0) g = 0;
                    else g = dane.poziomJasnCiem + k.G;

                    if (dane.poziomJasnCiem + k.B > 255) b = 255;
                    else if (dane.poziomJasnCiem + k.B < 0) b = 0;
                    else b = dane.poziomJasnCiem + k.B;
                    
                    k = Color.FromArgb(r, g, b);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void button7_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void button8_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);

                    int a = (k.R + k.G + k.B) / 3;

                    k = Color.FromArgb(a, a, a);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void button9_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);

                    int a = (k.R + k.G + k.B) / 3;
                    if (a < dane.poziomProg1) k = Color.Black;
                    else if (a < dane.poziomProg2) k = Color.Gray;
                    else k = Color.White;

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void trackBar2_ValueChanged(object sender, EventArgs e)
        {
            dane.poziomProg1 = trackBar2.Value;
        }

        private void button10_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k;
            double a;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    k = b1.GetPixel(x, y);

                    //Wzor wykorzystywany w modelu YUV
                    a = 0.299 * k.R + 0.587 * k.G + 0.114 * k.B;

                    k = Color.FromArgb((int)a, (int)a, (int)a);

                    b2.SetPixel(x, y, k);
                }
            }

            pictureBox2.Refresh();
        }

        private void trackBar3_Scroll(object sender, EventArgs e)
        {
            dane.poziomProg2 = trackBar3.Value;
        }

        // ZADANIE 2 - MASKA
        /*
        void inicjalizujMaske()
        {
            for (int i = 0; i < 3; i++)
            {
                for (int j = 0; j < 3; j++)
                {
                    maska[i, j] = 100;
                }
            }
        }
        */

        void odblokujMaska()
        {
            /*
            buttonMaska.Enabled = false;
            Boolean flaga = true;
            for (int i = 0; i < 3; i++)
            {
                for (int j = 0; j < 3; j++)
                {
                    if (maska[i, j] > 9 || maska[i, j] < -9)
                    {
                        flaga = false;
                    }
                }
            }
            */

            buttonMaska.Enabled = false;
            Boolean flaga = true;

            if (dane.m1 > 9 || dane.m1 < -9) flaga = false;
            if (dane.m2 > 9 || dane.m2 < -9) flaga = false;
            if (dane.m3 > 9 || dane.m3 < -9) flaga = false;
            if (dane.m4 > 9 || dane.m4 < -9) flaga = false;
            if (dane.m5 > 9 || dane.m5 < -9) flaga = false;
            if (dane.m6 > 9 || dane.m6 < -9) flaga = false;
            if (dane.m7 > 9 || dane.m7 < -9) flaga = false;
            if (dane.m8 > 9 || dane.m8 < -9) flaga = false;
            if (dane.m9 > 9 || dane.m9 < -9) flaga = false;

            if (flaga) buttonMaska.Enabled = true;
        }

        private void text1_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text1.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m1 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [0,0] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [0,0] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text2_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text2.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m2 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [0,1] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [0,1] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text3_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text3.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m3 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [0,2] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [0,2] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text4_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text4.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m4 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [1,0] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [1,0] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text5_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text5.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m5 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [1,1] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [1,1] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text6_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text6.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m6 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [1,2] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [1,2] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text7_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text7.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m7 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [2,0] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [2,0] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text8_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text8.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m8 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [2,1] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [2,1] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void text9_TextChanged(object sender, EventArgs e)
        {
            int value;

            if (int.TryParse(text9.Text, out value))
            {
                if (value <= 9 && value >= -9)
                {
                    dane.m9 = value;
                    errorbox.Text = "";
                    odblokujMaska();
                }
                else
                {
                    errorbox.Text = "Nieprawidłowa wartość na pozycji [2,2] w Masce!";
                    buttonMaska.Enabled = false;
                }
            }
            else
            {
                errorbox.Text = "Nieprawidłowa wartość na pozycji [2,2] w Masce!";
                buttonMaska.Enabled = false;
            }
        }

        private void buttonMaska_Click(object sender, EventArgs e)
        {
            Bitmap b1 = (Bitmap)pictureBox1.Image;
            Bitmap b2 = (Bitmap)pictureBox2.Image;

            Color k, k1, k2, k3, k4, k5, k6, k7, k8, k9;
            int r, g, b, suma_maski = 0;

            for (int x = 0; x < width; x++)
            {
                for (int y = 0; y < height; y++)
                {
                    //warunek dla k1 (lewy gorny rog piksela)
                    if (x-1 == -1 || y-1 == -1) k1 = Color.FromArgb(0, 0, 0);
                    else k1 = b1.GetPixel(x - 1, y - 1);
                    //warunek dla k2 (nad pikselem)
                    if (x-1 == -1) k2 = Color.FromArgb(0, 0, 0);
                    else k2 = b1.GetPixel(x - 1, y);
                    //warunek dla k3 (prawy gorny rog piksela)
                    if (x-1 == -1 || y+1 == height) k3 = Color.FromArgb(0, 0, 0);
                    else k3 = b1.GetPixel(x-1, y+1);
                    //warunek dla k4 (lewy bok piksela)
                    if (y-1 == -1) k4 = Color.FromArgb(0, 0, 0);
                    else k4 = b1.GetPixel(x, y - 1);
                    //warunek dla k5 (piksel srodkowy)
                    k5 = b1.GetPixel(x, y);
                    //warunek dla k6 (prawy bok piksela)
                    if (y+1 == height) k6 = Color.FromArgb(0, 0, 0);
                    else k6 = b1.GetPixel(x, y+1);
                    //warunek dla k7 (lewy dolny rog piksela)
                    if (x+1 == width || y-1 == -1) k7 = Color.FromArgb(0, 0, 0);
                    else k7 = b1.GetPixel(x + 1, y - 1);
                    //warunek dla k8 (dol piksela)
                    if (x+1 == width) k8 = Color.FromArgb(0, 0, 0);
                    else k8 = b1.GetPixel(x + 1, y);
                    //warunek dla k9 (prawy dolny rog piksela)
                    if (x+1 == width || y+1 == height) k9 = Color.FromArgb(0, 0, 0);
                    else k9 = b1.GetPixel(x + 1, y + 1);

                    r = (k1.R * dane.m1) + (k2.R * dane.m2) + (k3.R * dane.m3) + (k4.R * dane.m4) + (k5.R * dane.m5) + (k6.R * dane.m6) + (k7.R * dane.m7) + (k8.R * dane.m8) + (k9.R * dane.m9);
                    g = (k1.G * dane.m1) + (k2.G * dane.m2) + (k3.G * dane.m3) + (k4.G * dane.m4) + (k5.G * dane.m5) + (k6.G * dane.m6) + (k7.G * dane.m7) + (k8.G * dane.m8) + (k9.G * dane.m9);
                    b = (k1.B * dane.m1) + (k2.B * dane.m2) + (k3.B * dane.m3) + (k4.B * dane.m4) + (k5.B * dane.m5) + (k6.B * dane.m6) + (k7.B * dane.m7) + (k8.B * dane.m8) + (k9.B * dane.m9);
                    /*
                    for (int i = 0; i < 3; i++)
                    {
                        for (int j = 0; j < 3; j++)
                        {
                            suma_maski += maska[i, j];
                        }
                    }
                    */
                    suma_maski += dane.m1 + dane.m2 + dane.m3 + dane.m4 + dane.m5 + dane.m6 + dane.m7 + dane.m8 + dane.m9;

                    if (suma_maski != 0) r = r / suma_maski;
                    if (r > 255) r = 255;
                    if (r < 0) r = 0;

                    if (suma_maski != 0) g = g / suma_maski;
                    if (g > 255) g = 255;
                    if (g < 0) g = 0;

                    if (suma_maski != 0) b = b / suma_maski;
                    if (b > 255) b = 255;
                    if (b < 0) b = 0;

                    //errorbox.Text = maska[0, 0] + "   " + maska[0, 1] + "   " + maska[0, 2] + "   " + maska[1, 0] + "   " + maska[1, 1] + "   " + maska[1, 2] + "   " + maska[2, 0] + "   " + maska[2, 1] + "   " + maska[2, 2];
                    //errorbox.Text = r + " = " + r + " / " + suma_maski + " = " + r / suma_maski;

                    k = Color.FromArgb(r, g, b);
                    b2.SetPixel(x, y, k);

                    suma_maski = 0;
                }
            }

            pictureBox2.Refresh();
        }

        private void button11_Click(object sender, EventArgs e)
        {
            text1.Text = "1";
            text2.Text = "1";
            text3.Text = "1";
            text4.Text = "1";
            text5.Text = "1";
            text6.Text = "1";
            text7.Text = "1";
            text8.Text = "1";
            text9.Text = "1";
        }

        private void button12_Click(object sender, EventArgs e)
        {
            text1.Text = "1";
            text2.Text = "-2";
            text3.Text = "1";
            text4.Text = "-2";
            text5.Text = "5";
            text6.Text = "-2";
            text7.Text = "1";
            text8.Text = "-2";
            text9.Text = "1";
        }

        private void button13_Click(object sender, EventArgs e)
        {
            text1.Text = "-1";
            text2.Text = "0";
            text3.Text = "0";
            text4.Text = "0";
            text5.Text = "1";
            text6.Text = "0";
            text7.Text = "0";
            text8.Text = "0";
            text9.Text = "0";
        }

        private void button14_Click(object sender, EventArgs e)
        {
            text1.Text = "-1";
            text2.Text = "1";
            text3.Text = "1";
            text4.Text = "-1";
            text5.Text = "-2";
            text6.Text = "1";
            text7.Text = "-1";
            text8.Text = "1";
            text9.Text = "1";
        }

        private void button15_Click(object sender, EventArgs e)
        {
            text1.Text = "-1";
            text2.Text = "0";
            text3.Text = "1";
            text4.Text = "-1";
            text5.Text = "1";
            text6.Text = "1";
            text7.Text = "-1";
            text8.Text = "0";
            text9.Text = "1";
        }

        private void button16_Click(object sender, EventArgs e)
        {
            text1.Text = "0";
            text2.Text = "-1";
            text3.Text = "0";
            text4.Text = "-1";
            text5.Text = "4";
            text6.Text = "-1";
            text7.Text = "0";
            text8.Text = "-1";
            text9.Text = "0";
        }

        private void button17_Click(object sender, EventArgs e)
        {
            text1.Text = "1";
            text2.Text = "2";
            text3.Text = "1";
            text4.Text = "0";
            text5.Text = "0";
            text6.Text = "0";
            text7.Text = "-1";
            text8.Text = "-2";
            text9.Text = "-1";
        }


        private void button18_Click(object sender, EventArgs e)
        {
            text1.Text = "-1";
            text2.Text = "-1";
            text3.Text = "-1";
            text4.Text = "0";
            text5.Text = "0";
            text6.Text = "0";
            text7.Text = "1";
            text8.Text = "1";
            text9.Text = "1";
        }

        // serializacja i deserializacja

        private void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            StreamWriter sw = new StreamWriter("dane.xml");
            try
            {
                XmlSerializer serializer = new XmlSerializer(typeof(Dane));
                serializer.Serialize(sw, dane);
                sw.Close();
            }
            catch (Exception err)
            {
                Text = err.ToString();          //wyswietl komunikat w pasku tytułowym
            }
            finally
            {
                sw.Close();
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            if (File.Exists("dane.xml"))
            {
                StreamReader sr = new StreamReader("dane.xml");
                try
                {
                    XmlSerializer serializer = new XmlSerializer(typeof(Dane));
                    dane = (Dane)serializer.Deserialize(sr);

                    trackBar1.Value = dane.poziomJasnCiem;
                    trackBar2.Value = dane.poziomProg1;
                    trackBar3.Value = dane.poziomProg2;

                    text1.Text = dane.m1.ToString();
                    text2.Text = dane.m2.ToString();
                    text3.Text = dane.m3.ToString();
                    text4.Text = dane.m4.ToString();
                    text5.Text = dane.m5.ToString();
                    text6.Text = dane.m6.ToString();
                    text7.Text = dane.m7.ToString();
                    text8.Text = dane.m8.ToString();
                    text9.Text = dane.m9.ToString();
                }
                catch (Exception err)
                {
                    Text = err.ToString();
                }
                finally
                {
                    sr.Close();
                }
            }
        }
    }

    public class Dane
    {
        public int poziomJasnCiem = 0;
        public int poziomProg1 = 0;
        public int poziomProg2 = 0;
        public int m1 = 0, m2 = 0, m3 = 0, m4 = 0, m5 = 1, m6 = 0, m7 = 0, m8 = 0, m9 = 0;
    }
}
